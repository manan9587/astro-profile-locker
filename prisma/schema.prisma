
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  createdAt    DateTime    @default(now())
  state        State       @default(FREE_ACTIVE)
  proExpiresAt DateTime?
  identities   Identity[]
  quotas       Quotas?
  emails       EmailLog[]
  audit        AuditLog[]
}

enum State {
  FREE_ACTIVE
  FREE_REVOKED
  PRO_ACTIVE
  PRO_EXPIRED
}

model Identity {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  fullName   String
  dob        String   // YYYY-MM-DD (string for simplicity)
  tob        String   // HH:mm
  place      String?
  label      String   // Profile 1/2/3
  lockedAt   DateTime @default(now())
}

model Quotas {
  id           String    @id @default(cuid())
  userId       String    @unique
  user         User      @relation(fields: [userId], references: [id])
  trialTotal   Int       @default(0)
  trialUsed    Int       @default(0)
  emailTotal   Int       @default(0)
  emailUsed    Int       @default(0)
  cycleStart   DateTime  @default(now())
  cycleEnd     DateTime?
}

model EmailLog {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  identityId  String?
  toEmail     String
  status      String   // sent | failed | throttled
  providerRef String?
  errorMsg    String?
  createdAt   DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  action    String
  meta      String?
  ip        String?
  ua        String?
  createdAt DateTime @default(now())
}
